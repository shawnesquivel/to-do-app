{"ast":null,"code":"var _jsxFileName = \"/Users/shawnesquivel/task-tracker-march/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState, useEffect } from \"react\";\nimport { bodyParser } from \"json-server\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = task => {\n    // const res = await fetch(\"http://localhost:5000/tasks\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(task),\n    // });\n    // const data = res.json();\n    // setTasks([...tasks, data]);\n    // Without JSON Server\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id: id,\n      ...task\n    };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  }; // Delete task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n    console.log(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : \"Go for a walk :)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n} // Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shawnesquivel/task-tracker-march/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","bodyParser","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","console","log","deleteTask","method","filter","toggleReminder","map","reminder","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState, useEffect } from \"react\";\nimport { bodyParser } from \"json-server\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = (task) => {\n    // const res = await fetch(\"http://localhost:5000/tasks\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(task),\n    // });\n\n    // const data = res.json();\n\n    // setTasks([...tasks, data]);\n    // Without JSON Server\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id: id, ...task };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n    console.log(tasks);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"Go for a walk :)\"\n      )}\n    </div>\n  );\n}\n\n// Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}