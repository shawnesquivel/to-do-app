{"ast":null,"code":"var _jsxFileName = \"/Users/shawnesquivel/task-tracker-march/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState, useEffect } from \"react\";\nimport Footer from \"./components/Footer.js\";\nimport About from \"./components/About.js\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  }; // Fetch A Single Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // Without JSON Server\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id: id, ...task };\n    // console.log(newTask);\n    // setTasks([...tasks, newTask]);\n  }; // Delete task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    // Get the Task\n    const taskToToggle = await fetchTask(id); // Toggle Reminder\n\n    const updatedTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    }; // Put (update) object on server\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n    console.log(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Task Tracker\",\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : \"Go for a walk :)\", /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n} // Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shawnesquivel/task-tracker-march/src/App.js"],"names":["Header","Tasks","AddTask","useState","useEffect","Footer","About","BrowserRouter","Router","Route","Routes","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","reminder","map","console","log","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState, useEffect } from \"react\";\nimport Footer from \"./components/Footer.js\";\nimport About from \"./components/About.js\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n  // Fetch A Single Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n    // Without JSON Server\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id: id, ...task };\n    // console.log(newTask);\n    // setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    // Get the Task\n    const taskToToggle = await fetchTask(id);\n    // Toggle Reminder\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    // Put (update) object on server\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n    console.log(tasks);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          title=\"Task Tracker\"\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"Go for a walk :)\"\n        )}\n        <Routes>\n          <Route path=\"/about\" component={About} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\n// Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}