{"ast":null,"code":"var _jsxFileName = \"/Users/shawnesquivel/task-tracker-march/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id: id,\n      ...task\n    };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  }; // Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n    console.log(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : \"Go for a walk :)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n} // Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shawnesquivel/task-tracker-march/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","console","log","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKb;;AACA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAE,EAAEA,EAAN;AAAU,SAAGD;AAAb,KAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AACD,GALD,CANa,CAab;;;AACA,QAAMG,UAAU,GAAIP,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAcT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAda,CAkBb;;;AACA,QAAMS,cAAc,GAAIT,EAAD,IAAQ;AAC7BH,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CAAWX,IAAD,IACRA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWY,MAAAA,QAAQ,EAAE,CAACZ,IAAI,CAACY;AAA3B,KAAjB,GAAyDZ,IAD3D,CADM,CAAR;AAKAM,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,MAAMD,cAAc,CAAC,CAACD,WAAF,CAF7B;AAGE,MAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,EAMGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YANlB,EAOGF,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEW,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnDShB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id: id, ...task };\n    console.log(newTask);\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n    console.log(tasks);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"Go for a walk :)\"\n      )}\n    </div>\n  );\n}\n\n// Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}