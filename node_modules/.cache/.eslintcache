[{"/Users/shawnesquivel/task-tracker-march/src/index.js":"1","/Users/shawnesquivel/task-tracker-march/src/App.js":"2","/Users/shawnesquivel/task-tracker-march/src/reportWebVitals.js":"3","/Users/shawnesquivel/task-tracker-march/src/components/Header.js":"4","/Users/shawnesquivel/task-tracker-march/src/components/Button.js":"5","/Users/shawnesquivel/task-tracker-march/src/components/Tasks.js":"6","/Users/shawnesquivel/task-tracker-march/src/components/Task.js":"7","/Users/shawnesquivel/task-tracker-march/src/components/AddTask.js":"8","/Users/shawnesquivel/task-tracker-march/src/components/Footer.js":"9","/Users/shawnesquivel/task-tracker-march/src/components/About.js":"10"},{"size":500,"mtime":1646983298863,"results":"11","hashOfConfig":"12"},{"size":3330,"mtime":1648433355206,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1646901239726,"results":"14","hashOfConfig":"12"},{"size":779,"mtime":1648087380223,"results":"15","hashOfConfig":"12"},{"size":461,"mtime":1647411429983,"results":"16","hashOfConfig":"12"},{"size":305,"mtime":1647813936491,"results":"17","hashOfConfig":"12"},{"size":463,"mtime":1647815035578,"results":"18","hashOfConfig":"12"},{"size":1495,"mtime":1648412252306,"results":"19","hashOfConfig":"12"},{"size":208,"mtime":1648087169978,"results":"20","hashOfConfig":"12"},{"size":190,"mtime":1648087149164,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"145n4v9",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/shawnesquivel/task-tracker-march/src/index.js",[],[],["54","55"],"/Users/shawnesquivel/task-tracker-march/src/App.js",["56"],[],"import Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks.js\";\nimport AddTask from \"./components/AddTask.js\";\nimport { useState, useEffect } from \"react\";\nimport Footer from \"./components/Footer.js\";\nimport About from \"./components/About.js\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n  // Fetch A Single Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n    // Without JSON Server\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id: id, ...task };\n    // console.log(newTask);\n    // setTasks([...tasks, newTask]);\n  };\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    // Get the Task\n    const taskToToggle = await fetchTask(id);\n    // Toggle Reminder\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    // Put (update) object on server\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n    console.log(tasks);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          title=\"Task Tracker\"\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"Go for a walk :)\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\n// Use class based components\n// import React from \"react\";\n// class App extends React.Component {\n//   render() {\n//     return <h1> hello from a class </h1>;\n//   }\n// }\n\nexport default App;\n","/Users/shawnesquivel/task-tracker-march/src/reportWebVitals.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/Header.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/Button.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/Tasks.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/Task.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/AddTask.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/Footer.js",[],[],"/Users/shawnesquivel/task-tracker-march/src/components/About.js",[],[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":42,"nodeType":"63","messageId":"64","endLine":7,"endColumn":48},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]